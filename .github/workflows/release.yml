name: Release Obsidian plugin

on:
  push:
    tags:
      - "*"

env:
  PLUGIN_NAME: obsidian-diary-merger

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # 关键权限！

    steps:
      - name: Checkout code
        uses: actions/checkout@v4  # 使用最新版本
        with:
          fetch-depth: 0  # 确保获取所有标签历史

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"  # 升级到 LTS 版本

      - name: Build plugin
        run: |
          npm install
          npm run build
          mkdir -p ${{ env.PLUGIN_NAME }}
          cp main.js manifest.json styles.css ${{ env.PLUGIN_NAME }}
          zip -r ${{ env.PLUGIN_NAME }}.zip ${{ env.PLUGIN_NAME }}

      - name: Get tag name
        id: get-tag
        run: |
          TAG_NAME=$(git describe --tags --abbrev=0)
          echo "tag_name=${TAG_NAME}" >> $GITHUB_OUTPUT  # 新语法替代 set-output

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1  # 更稳定的替代方案
        with:
          tag_name: ${{ steps.get-tag.outputs.tag_name }}  # 使用纯标签名（如 1.0.0）
          name: "Release ${{ steps.get-tag.outputs.tag_name }}"
          body: "Automated release for Obsidian plugin"
          draft: false
          prerelease: false
          files: |
            ${{ env.PLUGIN_NAME }}.zip
            main.js
            manifest.json
            styles.css

      # 以下步骤可删除（因为 softprops/action-gh-release 已支持直接上传文件）
      # 保留仅用于兼容旧逻辑
      - name: Upload assets (fallback)
        if: steps.create_release.outputs.upload_url
        uses: actions/upload-release-asset@v2
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ env.PLUGIN_NAME }}.zip
          asset_name: ${{ env.PLUGIN_NAME }}-${{ steps.get-tag.outputs.tag_name }}.zip
          asset_content_type: application/zip